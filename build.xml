<?xml version="1.0" encoding="UTF-8"?>

<!--
 $Id$

 Universal Password Manager
 Copyright (C) 2005 Adrian Smith

 This file is part of Universal Password Manager.

 Universal Password Manager is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2 of the License, or
 (at your option) any later version.

 Universal Password Manager is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with Universal Password Manager; if not, write to the Free Software
 Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-->

<project name="Universal Password Manager" default="compile" basedir=".">

    <property file="build.properties"/>

    <!-- Set all the project properties -->
    <property name="src" value="src"/>
    <property name="test.src" value="test"/>
    <property name="build" value="build"/>
    <property name="build.instrumented" value="build.instrumented"/>
    <property name="test.build" value="testbuild"/>
    <property name="dist" value="dist"/>
    <property name="short.name" value="upm"/>
    <property name="full.name" value="UPM"/>
    <property name="lib" value="lib"/>


    <!-- Define a classpath for use later on -->
    <path id="project.class.path">
        <pathelement path="${build}"/>
        <pathelement path="${test.build}"/>
        <fileset dir="${lib}">
            <include name="*.jar"/>
        </fileset>
    </path>


    <target name="init">
    </target>


    <!-- The clean target cleans the environment -->
    <target name="clean">
        <delete dir="${build}"/>
        <delete dir="${test.build}"/>
        <delete dir="${dist}"/>
        <delete dir="${build.instrumented}"/>
        <delete>
            <fileset dir="${basedir}" includes="TEST-*"/>
        </delete>
    </target>


    <!-- The compile target compiles the source -->
    <target name="compile" depends="init">

        <mkdir dir="${build}"/>
        <javac srcdir="${src}" destdir="${build}" debug="on" failonerror="true" includeantruntime="false"
            excludes="com\_17od\upm\platformspecific\**" source="1.4" target="1.4">
            <classpath refid="project.class.path"/>
        </javac>

        <mkdir dir="${test.build}"/>
        <javac srcdir="${test.src}" destdir="${test.build}" debug="on" failonerror="true" includeantruntime="false">
            <classpath refid="project.class.path"/>
        </javac>

        <copy todir="${build}">
            <fileset dir="${src}">
                <exclude name="**\*.java"/>
            </fileset>
        </copy>

    </target>

    <target name="checkversion">
        <fail unless="version" message="Need to pass the parameter 'version' to this target"/>
    </target>


    <!-- Perform a build -->
    <target name="build" depends="checkversion, clean, test">

        <delete dir="${dist}"/>

        <echo message="Performing the build ${version}"/>

        <!-- Build the basic JAR distribution -->
        <mkdir dir="${dist}\build"/>
        <jar destfile="${dist}\build\${short.name}.jar" basedir="${build}" includes="**\*.class **\*.gif **\*.png **\*.properties" excludes="**\invest\**">
            <manifest>
                <attribute name="Implementation-Title" value="${short.name}"/>
                <attribute name="Implementation-Version" value="${version}"/>
                <attribute name="Class-Path" value="commons-codec-1.3.jar commons-httpclient-3.0.jar commons-logging-1.1.jar bcprov-jdk14-145.jar javacsv.jar"/>
                <attribute name="Main-Class" value="com._17od.upm.gui.MainWindow"/>
            </manifest>
        </jar>
        <copy file="${basedir}\server\http\upload.php" todir="${dist}\build\server\http"/>
        <copy file="${basedir}\server\http\deletefile.php" todir="${dist}\build\server\http"/>
        <copy file="${basedir}\lib\commons-codec-1.3.jar" todir="${dist}\build"/>
        <copy file="${basedir}\lib\commons-httpclient-3.0.jar" todir="${dist}\build"/>
        <copy file="${basedir}\lib\commons-logging-1.1.jar" todir="${dist}\build"/>
        <copy file="${basedir}\lib\bcprov-jdk14-145.jar" todir="${dist}\build"/>
      <copy file="${basedir}\lib\javacsv.jar" todir="${dist}\build"/>
        <copy file="${basedir}\COPYING.txt" todir="${dist}\build"/>
        <copy file="${basedir}\README.txt" todir="${dist}\build"/>
        <tar destfile="${dist}\${short.name}-${version}.tar">
            <tarfileset dir="${dist}\build" prefix="${short.name}-${version}"/>
        </tar>
        <gzip src="${dist}\${short.name}-${version}.tar" destfile="${dist}\${short.name}-${version}.tar.gz"/>
        <delete file="${dist}\${short.name}-${version}.tar"/>

        <!-- Build the source distribution -->
        <tar destfile="${dist}\${short.name}-${version}.src.tar">
            <tarfileset dir="${basedir}" prefix="${short.name}-${version}-src">
                <include name="build.xml"/>
                <include name="build.properties.tmpl"/>
                <include name="COPYING.txt"/>
                <include name="README.txt"/>
                <include name="README_DEV.txt"/>
                <include name="src\**"/>
                <exclude name="src\**\invest\**"/>
                <include name="images\**"/>
                <include name="test\**"/>
                <include name="lib\**"/>
                <include name="website\**"/>
                <include name="nsis\upm.nsi"/>
                <include name="server\**"/>
                <include name="bin\**"/>
            </tarfileset>
        </tar>
        <gzip src="${dist}\${short.name}-${version}.src.tar" destfile="${dist}\${short.name}-${version}.src.tar.gz"/>
        <delete file="${dist}\${short.name}-${version}.src.tar"/>
    </target>


    <target name="test" depends="compile">
        <!-- I had to put the junit.jar file into my ANT_HOME\lib in order for
             the junit task to work -->
        <junit haltonerror="on" haltonfailure="on" printsummary="on" showoutput="on" fork="yes">
            <classpath location="${build.instrumented}"/>
            <classpath refid="project.class.path"/>
            <jvmarg value="-Djunit.properties=${basedir}/build.properties"/>
            <jvmarg value="-Dupm.properties=${basedir}/upm.properties"/>
            <formatter type="plain"/>
            <batchtest if="test">
                <fileset dir="${test.build}">
                    <include name="**\${test}.class"/>
                </fileset>
            </batchtest>
            <batchtest unless="test">
                <fileset dir="${test.build}">
                    <include name="**\*.class"/>
                </fileset>
            </batchtest>
        </junit>
    </target>


    <target name="localise">
        <native2ascii encoding="UTF-16BE" src="${src}" dest="${src}" includes="**/*.unicode" ext=".properties"/>
    </target>

    <target name="all" depends="build">
    </target>

</project>
